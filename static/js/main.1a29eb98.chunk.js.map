{"version":3,"sources":["useViewCounter.hook.js","useClickOutside.hook.js","Parameters.js","CustomizedBar.js","DemoApp.js","App.js","index.js"],"names":["useViewCounter","slug","useState","views","setViews","useEffect","fetch","mode","then","res","json","totalViews","catch","err","console","error","message","useClickOutside","initialIsVisible","isVisible","setIsVisible","ref","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Parameters","handleChange","handleBgChange","handleBaseBgChange","handleLabelColorChange","handleBooleanPropChange","barColor","setBarColor","baseBgColor","setBaseBgColor","labelColor","setLabelColor","cpOne","cpTwo","cpThree","className","htmlFor","name","id","type","placeholder","onChange","onClick","style","position","marginTop","color","onChangeComplete","hex","value","defaultValue","e","CustomizedBar","INITIAL_STATE","completed","bgColor","height","width","borderRadius","labelAlignment","labelSize","margin","padding","isLabelVisible","transitionDuration","transitionTimingFunction","dir","maxCompleted","customLabel","undefined","animateOnRender","state","setState","showCode","setShowCode","codeValue","setCodeValue","copySuccess","setCopySuccess","textAreaRef","handleReset","propName","code","replace","select","execCommand","focus","DemoApp","setCompleted","setInterval","Math","floor","random","App","window","location","pathname","charAt","substring","getSlug","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.1a29eb98.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nconst useViewCounter = (slug) => {\n  const [views, setViews] = useState(null);\n\n  useEffect(() => {\n    // Don't count views on localhost\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    fetch(`https://my-projects-dashboard.vercel.app/api/views/${slug}`, {\n      mode: \"no-cors\",\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setViews(json.totalViews);\n      })\n      .catch((err) => console.error(err.message));\n  }, [slug]);\n  return { views };\n};\n\nexport default useViewCounter;\n","import { useEffect, useState, useRef } from \"react\";\n\nconst useClickOutside = initialIsVisible => {\n  const [isVisible, setIsVisible] = useState(initialIsVisible);\n  const ref = useRef(null);\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n\n  return { ref, isVisible, setIsVisible };\n};\n\nexport default useClickOutside;\n","import React, { useState } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport useClickOutside from \"./useClickOutside.hook\";\nimport \"./parameters.styles.scss\";\n\nconst Parameters = ({\n  handleChange,\n  handleBgChange,\n  handleBaseBgChange,\n  handleLabelColorChange,\n  handleBooleanPropChange,\n}) => {\n  const [barColor, setBarColor] = useState(\"#6a1b9a\");\n  const [baseBgColor, setBaseBgColor] = useState(\"#e0e0de\");\n  const [labelColor, setLabelColor] = useState(\"#e80909\");\n  const cpOne = useClickOutside(false);\n  const cpTwo = useClickOutside(false);\n  const cpThree = useClickOutside(false);\n\n  const handleColorChangeCpOne = (color) => {\n    setBarColor(color.hex);\n    handleBgChange(color.hex);\n  };\n\n  const handleColorChangeCpTwo = (color) => {\n    setBaseBgColor(color.hex);\n    handleBaseBgChange(color.hex);\n  };\n\n  const handleColorChangeCpThree = (color) => {\n    setLabelColor(color.hex);\n    handleLabelColorChange(color.hex);\n  };\n\n  return (\n    <>\n      <div className=\"param\">\n        <label htmlFor=\"completed\">completed</label>\n        <input\n          name=\"completed\"\n          id=\"completed\"\n          type=\"text\"\n          placeholder=\"1-100\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"maxCompleted\">max completed</label>\n        <input\n          name=\"maxCompleted\"\n          id=\"maxCompleted\"\n          type=\"text\"\n          placeholder=\"number\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"customLabel\">custom label</label>\n        <input\n          name=\"customLabel\"\n          id=\"customLabel\"\n          type=\"text\"\n          placeholder=\"any text\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <button onClick={() => cpOne.setIsVisible(true)}>\n          Choose Bar Color\n        </button>\n        {cpOne.isVisible && (\n          <div\n            ref={cpOne.ref}\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\n          >\n            <ChromePicker\n              name=\"barColor\"\n              color={barColor}\n              onChangeComplete={handleColorChangeCpOne}\n            />\n          </div>\n        )}\n        <input\n          value={barColor}\n          name=\"bgColor\"\n          type=\"text\"\n          onChange={(event) => {\n            handleChange(event);\n            setBarColor(event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"height\">height</label>\n        <input\n          name=\"height\"\n          id=\"height\"\n          type=\"text\"\n          placeholder=\"20px\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"width\">width</label>\n        <input\n          name=\"width\"\n          id=\"width\"\n          type=\"text\"\n          placeholder=\"100%\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"borderRadius\">border radius</label>\n        <input\n          name=\"borderRadius\"\n          id=\"borderRadius\"\n          type=\"text\"\n          placeholder=\"50px\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"labelAlignment\">label alignment</label>\n        <select\n          name=\"labelAlignment\"\n          defaultValue=\"right\"\n          id=\"labelAlignment\"\n          onChange={handleChange}\n        >\n          <option value=\"left\">left</option>\n          <option value=\"center\">center</option>\n          <option value=\"right\">right</option>\n          <option value=\"outside\">outside</option>\n        </select>\n      </div>\n      <div className=\"param\">\n        <button onClick={() => cpThree.setIsVisible(true)}>\n          Choose Label Color\n        </button>\n        {cpThree.isVisible && (\n          <div\n            ref={cpThree.ref}\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\n          >\n            <ChromePicker\n              name=\"labelColor\"\n              color={labelColor}\n              onChangeComplete={handleColorChangeCpThree}\n            />\n          </div>\n        )}\n        <input\n          value={labelColor}\n          name=\"labelColor\"\n          type=\"text\"\n          onChange={(event) => {\n            handleChange(event);\n            setBaseBgColor(event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"labelSize\">label size</label>\n        <input\n          name=\"labelSize\"\n          id=\"labelSize\"\n          type=\"text\"\n          placeholder=\"15px\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"isLabelVisible\">is label visible</label>\n        <select\n          name=\"isLabelVisible\"\n          defaultValue=\"true\"\n          id=\"isLabelVisible\"\n          onChange={(e) =>\n            handleBooleanPropChange(e.target.value, \"isLabelVisible\")\n          }\n        >\n          <option value={\"true\"}>true</option>\n          <option value={\"false\"}>false</option>\n        </select>\n      </div>\n      <div className=\"param\">\n        <button onClick={() => cpTwo.setIsVisible(true)}>\n          Choose \"non-completed\" Bar Color\n        </button>\n        {cpTwo.isVisible && (\n          <div\n            ref={cpTwo.ref}\n            style={{ position: \"absolute\", marginTop: \"30px\" }}\n          >\n            <ChromePicker\n              name=\"baseBgColor\"\n              color={baseBgColor}\n              onChangeComplete={handleColorChangeCpTwo}\n            />\n          </div>\n        )}\n        <input\n          value={baseBgColor}\n          name=\"baseBgColor\"\n          type=\"text\"\n          onChange={(event) => {\n            handleChange(event);\n            setBaseBgColor(event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"margin\">margin</label>\n        <input name=\"margin\" id=\"margin\" type=\"text\" onChange={handleChange} />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"padding\">padding</label>\n        <input\n          name=\"padding\"\n          id=\"padding\"\n          type=\"text\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"transitionDuration\">transition duration</label>\n        <input\n          name=\"transitionDuration\"\n          id=\"transitionDuration\"\n          type=\"text\"\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"transitionTimingFunction\">\n          transition timing function\n        </label>\n        <select\n          name=\"transitionTimingFunction\"\n          defaultValue=\"right\"\n          id=\"transitionTimingFunction\"\n          onChange={handleChange}\n        >\n          <option value=\"ease-in-out\">ease-in-out</option>\n          <option value=\"ease\">ease</option>\n          <option value=\"linear\">linear</option>\n          <option value=\"ease-in\">ease-in</option>\n          <option value=\"ease-out\">ease-out</option>\n        </select>\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"animateOnRender\">animate on render</label>\n        <select\n          name=\"animateOnRender\"\n          defaultValue=\"false\"\n          id=\"animateOnRender\"\n          onChange={(e) =>\n            handleBooleanPropChange(e.target.value, \"animateOnRender\")\n          }\n        >\n          <option value={\"true\"}>true</option>\n          <option value={\"false\"}>false</option>\n        </select>\n      </div>\n      <div className=\"param\">\n        <label htmlFor=\"dir\">direction</label>\n        <select name=\"dir\" defaultValue=\"ltr\" id=\"dir\" onChange={handleChange}>\n          <option value=\"ltr\">ltr</option>\n          <option value=\"rtl\">rtl</option>\n          <option value=\"auto\">auto</option>\n        </select>\n      </div>\n    </>\n  );\n};\n\nexport default Parameters;\n","import React, { useState, useRef } from \"react\";\n\nimport Parameters from \"./Parameters\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport \"./customizedBar.styles.scss\";\n\nconst CustomizedBar = () => {\n  const INITIAL_STATE = {\n    completed: 50,\n    bgColor: \"#6a1b9a\",\n    height: \"20px\",\n    width: \"100%\",\n    borderRadius: \"50px\",\n    labelAlignment: \"right\",\n    baseBgColor: \"#e0e0de\",\n    labelColor: \"#e80909\",\n    labelSize: \"15px\",\n    margin: \"\",\n    padding: \"\",\n    isLabelVisible: true,\n    transitionDuration: \"1s\",\n    transitionTimingFunction: \"ease-in-out\",\n    dir: \"ltr\",\n    maxCompleted: 100,\n    customLabel: undefined,\n    animateOnRender: false,\n  };\n\n  const [state, setState] = useState(INITIAL_STATE);\n  const [showCode, setShowCode] = useState(false);\n  const [codeValue, setCodeValue] = useState(\"\");\n  const [copySuccess, setCopySuccess] = useState(\"Copy\");\n  const textAreaRef = useRef(null);\n\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleBgChange = (color) => {\n    setState({\n      ...state,\n      bgColor: color,\n    });\n  };\n\n  const handleBaseBgChange = (color) => {\n    setState({\n      ...state,\n      baseBgColor: color,\n    });\n  };\n\n  const handleLabelColorChange = (color) => {\n    setState({\n      ...state,\n      labelColor: color,\n    });\n  };\n\n  const handleReset = () => {\n    setState(INITIAL_STATE);\n    setShowCode(false);\n  };\n\n  const handleBooleanPropChange = (value, propName) => {\n    setState({\n      ...state,\n      [propName]: value === \"true\",\n    });\n  };\n\n  const copyToClipboard = (e) => {\n    textAreaRef.current.select();\n    document.execCommand(\"copy\");\n    e.target.focus();\n    setCopySuccess(\"Copied!\");\n  };\n\n  const generateCode = () => {\n    setCopySuccess(\"Copy\");\n    setShowCode(true);\n    const tempCode = `<ProgressBar \n    completed={${state.completed}}\n    ${state.bgColor === \"#6a1b9a\" ? \"\" : `bgColor=\"${state.bgColor}\"`}\n    ${state.height === \"20px\" ? \"\" : `height=\"${state.height}\"`}\n    ${state.width === \"100%\" ? \"\" : `width=\"${state.width}\"`}\n    ${\n      state.borderRadius === \"50px\"\n        ? \"\"\n        : `borderRadius=\"${state.borderRadius}\"`\n    }\n    ${\n      state.labelAlignment === \"right\"\n        ? \"\"\n        : `labelAlignment=\"${state.labelAlignment}\"`\n    }\n    ${state.isLabelVisible ? \"\" : `isLabelVisible={false}`}\n    ${\n      state.baseBgColor === \"#e0e0de\"\n        ? \"\"\n        : `baseBgColor=\"${state.baseBgColor}\"`\n    }\n    ${state.labelColor === \"#fff\" ? \"\" : `labelColor=\"${state.labelColor}\"`}\n    ${state.labelSize === \"15px\" ? \"\" : `labelSize=\"${state.labelSize}\"`}\n    ${state.margin === \"\" ? \"\" : `margin=\"${state.margin}\"`}\n    ${state.padding === \"\" ? \"\" : `padding=\"${state.padding}\"`}\n    ${\n      state.transitionDuration === \"1s\"\n        ? \"\"\n        : `transitionDuration=\"${state.transitionDuration}\"`\n    }\n    ${\n      state.transitionTimingFunction === \"ease-in-out\"\n        ? \"\"\n        : `transitionTimingFunction=\"${state.transitionTimingFunction}\"`\n    }\n    ${state.animateOnRender ? `animateOnRender` : \"\"}\n    ${state.dir === \"ltr\" ? \"\" : `dir=\"${state.dir}\"`}\n    ${state.maxCompleted === 100 ? \"\" : `maxCompleted={${state.maxCompleted}}`}\n    ${state.customLabel ? `customLabel=\"${state.customLabel}\"` : \"\"}\n    />`;\n    const code = tempCode.replace(/^\\s*$(?:\\r\\n?|\\n)/gm, \"\");\n    setCodeValue(code);\n  };\n\n  return (\n    <>\n      <ProgressBar {...state} />\n      <Parameters\n        handleChange={handleChange}\n        handleBgChange={handleBgChange}\n        handleBaseBgChange={handleBaseBgChange}\n        handleLabelColorChange={handleLabelColorChange}\n        handleBooleanPropChange={handleBooleanPropChange}\n        handleReset={handleReset}\n      />\n      <button className=\"reset-button\" onClick={handleReset}>\n        RESET\n      </button>\n      <button className=\"code-button\" onClick={generateCode}>\n        Generate Component Code\n      </button>\n      <div>\n        {showCode && (\n          <div className=\"code-area\">\n            <button onClick={copyToClipboard}>{copySuccess}</button>\n            <textarea\n              ref={textAreaRef}\n              value={codeValue}\n              onChange={(e) => setCodeValue(e.target.value)}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CustomizedBar;\n","import React, { useState, useEffect } from \"react\";\nimport CustomizedBar from \"./CustomizedBar\";\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nconst DemoApp = () => {\n  const [completed, setCompleted] = useState(0);\n\n  useEffect(() => {\n    setInterval(() => setCompleted(Math.floor(Math.random() * 100) + 1), 2000);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h3>Randomly generated completed value</h3>\n      <ProgressBar completed={completed} />\n      <hr />\n      <h3>Interactive Generator</h3>\n      <CustomizedBar />\n      <div style={{ marginTop: \"100px\" }}></div>\n    </div>\n  );\n};\n\nexport default DemoApp;\n","import React from \"react\";\nimport useViewCounter from \"./useViewCounter.hook\";\nimport DemoApp from \"./DemoApp\";\n\nconst App = () => {\n  const getSlug = () => {\n    let slug = window.location.pathname;\n    if (slug.charAt(0) === \"/\") {\n      slug = slug.substring(1);\n    }\n    return slug;\n  };\n  useViewCounter(getSlug());\n\n  return (\n    <div className=\"App\">\n      <DemoApp />\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(<App />)\n"],"sourceRoot":""}